on:
  workflow_call:
    inputs:
      package_path:
        description: "The path of the package (e.g. packages/core)"
        required: true
        type: string
      package_name:
        description: "The npm package name (e.g. @qfetch/core)"
        required: true
        type: string
      package_tag:
        description: "The release tag for the package"
        required: true
        type: string
    secrets:
      NPM_TOKEN:
        required: true
      # JSR_TOKEN:
      #   required: true

jobs:
  build-and-upload:
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Enable Corepack
        run: corepack enable

      - name: Cache Turbo
        uses: actions/cache@v4
        with:
          path: |
            .turbo
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version-file: "package.json"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --filter=${{ inputs.package_name }}

      - name: Build package
        run: pnpm build --filter=${{ inputs.package_name }}

      - name: Pack package
        run: pnpm pack --filter=${{ inputs.package_name }} --out=build.tgz

      - name: Upload build artifact
        run: gh release upload ${{ inputs.package_tag }} build.tgz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-npm:
    runs-on: ubuntu-24.04
    needs: build-and-upload

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Enable Corepack
        run: corepack enable

      - name: Cache Turbo
        uses: actions/cache@v4
        with:
          path: |
            .turbo
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version-file: "package.json"
          cache: "pnpm"
          registry-url: "https://registry.npmjs.org"

      - name: Install dependencies
        run: pnpm install --filter=${{ inputs.package_name }}

      - name: Build package
        run: pnpm build --filter=${{ inputs.package_name }}

      - name: Publish to npm registry
        run: pnpm publish --filter=${{ inputs.package_name }} --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish-jsr:
    runs-on: ubuntu-24.04
    needs: build-and-upload
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Enable Corepack
        run: corepack enable

      - name: Publish to jsr registry
        run: pnpx jsr publish
        working-directory: ${{ inputs.package_path }}
